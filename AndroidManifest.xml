<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.patr.radix"
    android:versionCode="6"
    android:versionName="1.5" >

    <uses-sdk
        android:minSdkVersion="18"
        android:targetSdkVersion="21" />

    <uses-feature
        android:name="android.hardware.bluetooth_le"
        android:required="true" />

    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.RECEIVE_SMS" />
    <uses-permission android:name="android.permission.READ_SMS" />
    // SDK 权限申明, 第三方 APP 接入时，请将 com.yuntongxun.ecdemo 替换为自己的包名
    // 和下面的 uses-permission 一起加入到你的 AndroidManifest 文件中。
    <permission
        android:name="com.patr.radix.permission.RECEIVE_MSG"
        android:protectionLevel="signature" />
    <permission
        android:name="com.patr.radix.permission.INCOMING_CALL"
        android:protectionLevel="signature" />
    // 接收 SDK 消息广播权限， 第三方 APP 接入时，请将 com.yuntongxun.ecdemo 替换为自己的包名
    <uses-permission android:name="com.patr.radix.permission.RECEIVE_MSG" />
    // 如果没有VOIP功能可以忽略
    <uses-permission android:name="com.patr.radix.permission.INCOMING_CALL" />

    <!-- 允许一个程序获取信息有关当前或最近运行的任务，一个缩略的任务状态，是否活动等等(必选配置) -->
    <uses-permission android:name="android.permission.GET_TASKS" />
    <!-- 允许程序录制音频(必选配置) -->
    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    <!-- 允许应用程序修改全局声音设置的权限 (必选配置) -->
    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
    <!-- 允许使用PowerManager的WakeLocks保持进程在休眠时从屏幕消失(必选配置) -->
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <!-- 允许请求访问使用照相设备(如果使用视频通话则必选配置) -->
    <uses-permission android:name="android.permission.CAMERA" />

    <!-- GPS定位权限(非必选，由应用选择是否需要) -->
    <uses-permission android:name="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS" />
    <!-- 允许一个程序访问精良位置(如GPS) -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <!-- 允许程序读取用户联系人数据(非必选，由应用选择是否需要) -->
    <uses-permission android:name="android.permission.READ_CONTACTS" />
    <!-- 允许程序禁用键盘锁(非必选,由应用选择是否需要) -->
    <uses-permission android:name="android.permission.DISABLE_KEYGUARD" />
    <uses-permission android:name="android.permission.WRITE_SETTINGS" />
    <!-- 允许一个程序接收到 ACTION_BOOT_COMPLETED广播在系统完成启动 -->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />

    <!-- 以下2项是sharedsdk的配置 -->
    <uses-permission android:name="android.permission.MANAGE_ACCOUNTS" />
    <uses-permission android:name="android.permission.GET_ACCOUNTS" />

     <!-- 【常用】 信鸽SDK所需权限 -->
    <uses-permission android:name="android.permission.RECEIVE_USER_PRESENT" />
    <!-- 【可选】 信鸽SDK所需权限 -->
    <uses-permission android:name="android.permission.RESTART_PACKAGES" />
    <uses-permission android:name="android.permission.BROADCAST_STICKY" />
    <uses-permission android:name="android.permission.KILL_BACKGROUND_PROCESSES" />
    <uses-permission android:name="android.permission.READ_LOGS" />
    <uses-permission android:name="android.permission.BATTERY_STATS" />
    
    <application
        android:name="com.patr.radix.App"
        android:allowBackup="true"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name"
        android:screenOrientation="portrait"
        android:theme="@android:style/Theme.NoTitleBar" >

        <activity
            android:name="com.patr.radix.MainActivity"
            android:label="@string/app_name"
            android:configChanges="keyboardHidden|orientation|screenSize"
            android:screenOrientation="portrait" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.patr.radix.LoginActivity"
            android:configChanges="keyboardHidden|orientation|screenSize"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.patr.radix.ui.unlock.MyKeysActivity"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.patr.radix.ui.unlock.ActiveTimeActivity"
            android:configChanges="keyboardHidden|orientation|screenSize"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.patr.radix.ui.unlock.QRCodeActivity"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.patr.radix.ui.message.MessageDetailsActivity"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.patr.radix.ui.settings.EditUserInfoActivity"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.patr.radix.LockSetupActivity"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.patr.radix.LockValidateActivity"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.patr.radix.ui.settings.UpdateUserPhoneActivity"
            android:configChanges="keyboardHidden|orientation|screenSize"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.patr.radix.ui.settings.PrefSettingActivity"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.patr.radix.ui.WeatherActivity"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.patr.radix.ui.settings.FeedbackActivity"
            android:configChanges="keyboardHidden|orientation|screenSize"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.patr.radix.ui.settings.EditPwdActivity"
            android:configChanges="keyboardHidden|orientation|screenSize"
            android:screenOrientation="portrait" />
        <activity
            android:name="com.patr.radix.ForgetPwdActivity"
            android:configChanges="keyboardHidden|orientation|screenSize"
            android:screenOrientation="portrait" />
        <!-- VoIP 呼叫界面 -->
        <activity
            android:name="com.patr.radix.ui.visitor.VoIPCallActivity"
            android:configChanges="keyboardHidden|orientation|screenSize"
            android:launchMode="singleTask"
            android:screenOrientation="portrait"
            android:theme="@android:style/Theme.NoTitleBar.Fullscreen">
            <intent-filter>
                <action android:name="con.patr.radix.intent.ACTION_VOICE_CALL" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.patr.radix.ui.visitor.VideoActivity"
            android:configChanges="keyboardHidden|orientation|screenSize"
            android:launchMode="singleTask"
            android:screenOrientation="portrait"
            android:theme="@android:style/Theme.NoTitleBar.Fullscreen">
            <intent-filter>
                <action android:name="con.patr.radix.intent.ACTION_VIDEO_CALL" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        
        <service
            android:name="com.patr.radix.ble.BluetoothLeService"
            android:enabled="true" />
        
        <!-- <receiver
            android:name="com.patr.radix.VisitorCallReceiver" >
            <intent-filter>
                <action android:name="com.patr.radix.ACTION_RELEASE_CALL" />
            </intent-filter>
        </receiver> -->

        <!-- *****************************ECSDK核心服务类 （必须配置）Start******************************************** -->
        // SDK核心服务配置(必选配置)
        <service
            android:name="com.yuntongxun.ecsdk.ECClientService"
            android:enabled="true"
            android:process=":push" />
        <service
            android:name="com.yuntongxun.ecsdk.ECClientService$InnerService"
            android:enabled="true"
            android:process=":push" />
        // 以下两项为SDK事件提醒广播(必选配置)
        <receiver
            android:name="com.yuntongxun.ecsdk.booter.CCPReceivers$AlarmReceiver"
            android:process=":push" />
        // v5.1.9r增加配置选项(必选配置)
        <receiver
            android:name="com.yuntongxun.ecsdk.booter.Alarm"
            android:exported="false"
            android:process=":push" />
        // SDK网络改变广播(必选配置)
        <receiver
            android:name="com.yuntongxun.ecsdk.booter.CCPReceivers$ConnectionReceiver"
            android:process=":push" >
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
            </intent-filter>
        </receiver>
        // SDK广播通知配置（开机广播）
        // 可选广播、如果应用想做开机重启，可以实现该广播通知即可
        <receiver
            android:name="com.yuntongxun.ecsdk.booter.CCPReceivers$BootReceiver"
            android:process=":push" >
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
            </intent-filter>
        </receiver>
        //  配置SDK消息通知广播 ,SDK通知会分三种提醒方式
        //  1、直接通过设置的回调接口（OnChatReceiveListener）Push给应用
        //  2、如果应用没有设置回调接口则采用（BroadcastReceiver）广播通知（v5.1.8版本）此时如果应用处于未运行状态则会直接唤醒应用处理
        //  3、如果应用未处于运行状态并且不想被唤醒应用运行则采用状态栏通知处理（SDK直接提醒，不会通知应用）,比如调用
        //  ECDevice#logout(ECDevice.NotifyMode, ECDevice.OnLogoutListener)退出接口传入后台接收消息才会有提醒

        //  注意：以上在a和b的场景下，SDK都会将消息直接给应用处理，只有在c的情况SDK才会直接处理消息提醒，所以应用需要处理a和b两种情况
        // 声明自定义通知的广播接收器，第三方 APP 集成时，action 中的 com.yuntongxun.ecdemo 请替换为自己的包名 -->
        // 如果没有VOIP功能可以忽略
        <receiver
            android:name="com.patr.radix.ui.visitor.YuntxNotifyReceiver"
            android:exported="false" >
            <intent-filter>
                // 接收push消息
                // action匹配规则{packageName + ".action" + "功能"}
                <action android:name="com.patr.radix.action.VOIP_CALL" />
                <action android:name="com.patr.radix.action.MESSAGE" />
                <action android:name="com.patr.radix.action.NOTIFICATION_CLICK" />
                <action android:name="com.patr.radix.action.PERSON_VERSION" />
            </intent-filter>
        </receiver>
        // *****************************ECSDK核心服务类 End*******************************************
        // 应用处理程序逻辑服务
        <service android:name="com.patr.radix.service.YuntxNotifyReceiver$NotifyService" />
        
        <!-- 信鸽配置项 -->
        <!-- 【必须】 (2.30及以上版新增)展示通知的activity -->
        <activity
            android:name="com.tencent.android.tpush.XGPushActivity"
            android:theme="@android:style/Theme.Translucent"
            android:exported="false" >
            <intent-filter>
                 <!-- 若使用AndroidStudio，请设置android:name="android.intent.action"-->
                <action android:name="" />
            </intent-filter>
        </activity>

        <!-- 【必须】 信鸽receiver广播接收 -->
        <receiver
            android:name="com.tencent.android.tpush.XGPushReceiver"
            android:process=":xg_service_v2" >
            <intent-filter android:priority="0x7fffffff" >

                <!-- 【必须】 信鸽SDK的内部广播 -->
                <action android:name="com.tencent.android.tpush.action.SDK" />
                <action android:name="com.tencent.android.tpush.action.INTERNAL_PUSH_MESSAGE" />
                <!-- 【必须】 系统广播：网络切换 -->
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
                
                <!-- 【可选】 系统广播：开屏 -->
                <action android:name="android.intent.action.USER_PRESENT" />

                <!-- 【可选】 一些常用的系统广播，增强信鸽service的复活机会，请根据需要选择。当然，你也可以添加APP自定义的一些广播让启动service -->
                <action android:name="android.bluetooth.adapter.action.STATE_CHANGED" />
                <action android:name="android.intent.action.ACTION_POWER_CONNECTED" />
                <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED" />
            </intent-filter>
            <!-- 【可选】 usb相关的系统广播，增强信鸽service的复活机会，请根据需要添加 -->
            <intent-filter android:priority="0x7fffffff" >
                <action android:name="android.intent.action.MEDIA_UNMOUNTED" />
                <action android:name="android.intent.action.MEDIA_REMOVED" />
                <action android:name="android.intent.action.MEDIA_CHECKING" />
                <action android:name="android.intent.action.MEDIA_EJECT" />

                <data android:scheme="file" />
            </intent-filter>
        </receiver>
        <!-- 【必须】 信鸽service -->
        <service
            android:name="com.tencent.android.tpush.service.XGPushService"
            android:exported="true"
            android:persistent="true"
            android:process=":xg_service_v2" />

        <!-- 【必须】 通知service，其中android:name部分要改为当前包名 -->
        <service
            android:name="com.tencent.android.tpush.rpc.XGRemoteService"
            android:exported="true" >
            <intent-filter>
                 <!-- 【必须】 请修改为当前APP名包.PUSH_ACTION，如demo的包名为：com.qq.xgdemo -->
                <action android:name="com.patr.radix.PUSH_ACTION" />
            </intent-filter>
        </service>

        <!-- 【必须】 请修改为APP的AccessId，“21”开头的10位数字，中间没空格 -->
        <meta-data
            android:name="XG_V2_ACCESS_ID"
            android:value="2100231247" />
        <!-- 【必须】 请修改为APP的AccessKey，“A”开头的12位字符串，中间没空格 -->
        <meta-data
            android:name="XG_V2_ACCESS_KEY"
            android:value="A7SN2M7C3B9U" />
        </application>

</manifest>